openapi: 3.0.3
info:
  version: 1.0.0
  title: MAX Aspire API
  description: MAX Aspire API Documentation
servers:
  - url: 'https://nv4pftutrf.execute-api.us-east-1.amazonaws.com/Prod'
security:
  - bearerAuth: []
tags:
  - name: Chats
    description: API for Chats Service
  - name: ConnectSE
    description: API for Connect SE Service
  - name: Jobs
    description: API for Jobs Service
  - name: JobApplications
    description: API for Job Applications Service
  - name: IndustryTags
    description: API for Industry Tags Service
  - name: Payment
    description: API for payment validation
paths:
  /:
    get:
      tags:
        - Index
      description: Returns API Version
      responses:
        '200':
          $ref: '#/components/responses/GeneralResponse'
  /create-db-models:
    post:
      tags:
        - Index
      description: Create Database Tables
      responses:
        '201':
          description: Created
  /chats:
    post:
      tags:
        - Chats
      description: Create new Chat
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Chat'
      responses:
        '201':
          description: Created
        '400':
          description: Bad Request
          allOf:
            - $ref: '#/components/responses/GeneralErrorResponse'
        '401':
          description: Unauthorized
          allOf:
            - $ref: '#/components/responses/GeneralErrorResponse'
    get:
      tags:
        - Chats
      description: Get All Chats
      responses:
        '200':
          description: Ok
          allOf:
            - $ref: '#/components/responses/Chats'
  '/chats/{chatId}':
    parameters:
      - $ref: '#/components/parameters/ChatIdPath'
    get:
      tags:
        - Chats
      description: Get Chat with id
      responses:
        '200':
          description: OK
          allOf:
            - $ref: '#/components/responses/IndustryTag'
        '400':
          description: Bad Request
          allOf:
            - $ref: '#/components/responses/GeneralErrorResponse'
        '404':
          description: Not Found
          allOf:
            - $ref: '#/components/responses/GeneralErrorResponse'
    put:
      tags:
        - Chats
      description: Update Chat with id
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Chat'
      responses:
        '200':
          description: OK
        '400':
          description: Bad Request
          allOf:
            - $ref: '#/components/responses/GeneralErrorResponse'
        '401':
          description: Unauthorized
          allOf:
            - $ref: '#/components/responses/GeneralErrorResponse'
        '404':
          description: Not Found
          allOf:
            - $ref: '#/components/responses/GeneralErrorResponse'
    delete:
      tags:
        - Chats
      description: Delete Chat with id
      responses:
        '200':
          description: OK
        '400':
          description: Bad Request
          allOf:
            - $ref: '#/components/responses/GeneralErrorResponse'
        '401':
          description: Unauthorized
          allOf:
            - $ref: '#/components/responses/GeneralErrorResponse'
        '404':
          description: Not Found
          allOf:
            - $ref: '#/components/responses/GeneralErrorResponse'
  '/chats/{chatId}/reserve':
    parameters:
      - $ref: '#/components/parameters/ChatIdPath'
    put:
      tags:
        - Chats
      description: Reserve Chat with id
      responses:
        '200':
          description: OK
        '400':
          description: Bad Request
          allOf:
            - $ref: '#/components/responses/GeneralErrorResponse'
        '401':
          description: Unauthorized
          allOf:
            - $ref: '#/components/responses/GeneralErrorResponse'
        '403':
          description: Forbidden
          allOf:
            - $ref: '#/components/responses/GeneralErrorResponse'
        '404':
          description: Not Found
          allOf:
            - $ref: '#/components/responses/GeneralErrorResponse'
  '/chats/{chatId}/unreserve':
    parameters:
      - $ref: '#/components/parameters/ChatIdPath'
    put:
      tags:
        - Chats
      description: Unreserve Chat with id
      responses:
        '200':
          description: OK
        '400':
          description: Bad Request
          allOf:
            - $ref: '#/components/responses/GeneralErrorResponse'
        '401':
          description: Unauthorized
          allOf:
            - $ref: '#/components/responses/GeneralErrorResponse'
        '403':
          description: Forbidden
          allOf:
            - $ref: '#/components/responses/GeneralErrorResponse'
        '404':
          description: Not Found
          allOf:
            - $ref: '#/components/responses/GeneralErrorResponse'
  '/chats/{chatId}/cancel':
    parameters:
      - $ref: '#/components/parameters/ChatIdPath'
    put:
      tags:
        - Chats
      description: Cancel Chat with id
      responses:
        '200':
          description: OK
        '400':
          description: Bad Request
          allOf:
            - $ref: '#/components/responses/GeneralErrorResponse'
        '401':
          description: Unauthorized
          allOf:
            - $ref: '#/components/responses/GeneralErrorResponse'
        '403':
          description: Forbidden
          allOf:
            - $ref: '#/components/responses/GeneralErrorResponse'
        '404':
          description: Not Found
          allOf:
            - $ref: '#/components/responses/GeneralErrorResponse'
  /jobs:
    post:
      tags:
        - Jobs
      description: Create new Job
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Job'
      responses:
        '201':
          description: OK
          allOf:
            - $ref: '#/components/responses/Jobs'
        '401':
          description: UnAuthorized
          allOf:
            - $ref: '#/components/responses/GeneralErrorResponse'
    get:
      tags:
        - Jobs
      description: Get All Jobs
      parameters:
        - name: user_id
          in: query
          description: filter jobs by user_id
          required: false
          schema:
            type: email
        - name: status
          in: query
          description: filter jobs by status (open or closed)
          required: false
          schema:
            type: string
            enum:
              - UNDER_REVIEW
              - ACTIVE
              - REJECTED
              - EXPIRED
              - CLOSED
        - name: page
          in: query
          description: filter jobs by page
          required: false
          schema:
            type: integer
        - name: page_size
          in: query
          description: 'specifies page_size for page, default is 3 when not specified'
          required: false
          schema:
            type: integer
      responses:
        '200':
          description: Ok
          allOf:
            - $ref: '#/components/responses/Jobs'
  '/jobs/{jobId}':
    parameters:
      - $ref: '#/components/parameters/JobIdPath'
    get:
      tags:
        - Jobs
      description: Get Job with id
      responses:
        '200':
          description: OK
          allOf:
            - $ref: '#/components/responses/Job'
        '404':
          description: Not Found
          allOf:
            - $ref: '#/components/responses/GeneralErrorResponse'
    put:
      tags:
        - Jobs
      description: Update Job with id
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Job'
      responses:
        '200':
          description: OK
          allOf:
            - $ref: '#/components/responses/GeneralResponse'
        '404':
          description: Not Found
          allOf:
            - $ref: '#/components/responses/GeneralErrorResponse'
    delete:
      tags:
        - Jobs
      description: Delete Job with id
      responses:
        '200':
          description: OK
          allOf:
            - $ref: '#/components/responses/GeneralResponse'
        '404':
          description: Not Found
          allOf:
            - $ref: '#/components/responses/GeneralErrorResponse'
        '409':
          description: Conflict
          allOf:
            - $ref: '#/components/responses/GeneralErrorResponse'
  '/jobs/{jobId}/close':
    parameters:
      - $ref: '#/components/parameters/JobIdPath'
    put:
      tags:
        - Jobs
      description: Update Job status to CLOSED
      responses:
        '200':
          description: OK
          allOf:
            - $ref: '#/components/responses/GeneralResponse'
        '404':
          description: Not Found
          allOf:
            - $ref: '#/components/responses/GeneralErrorResponse'
  '/job_contact/{jobId}':
    parameters:
      - $ref: '#/components/parameters/JobIdPath'
    get:
      tags:
        - Jobs
      description: Get Contact Information of the person who posted the job
      responses:
        '200':
          description: OK
          allOf:
            - $ref: '#/components/responses/JobContact'
        '401':
          description: Not Found
          allOf:
            - $ref: '#/components/responses/GeneralErrorResponse'
        '402':
          description: Payment Required
          allOf:
            - $ref: '#/components/responses/GeneralErrorResponse'
        '404':
          description: UnAuthorized
          allOf:
            - $ref: '#/components/responses/GeneralErrorResponse'
        '417':
          description: Expectation Failed
          allOf:
            - $ref: '#/components/responses/GeneralErrorResponse'
        '428':
          description: Pre-Condition Required
          allOf:
            - $ref: '#/components/responses/GeneralErrorResponse'
  '/job-applications':
    post:
      tags:
       - JobApplications
      description: Create new Job Applications
      requestBody:
       content:
         application/json:
           schema:
             $ref: '#/components/schemas/JobApplication'
      responses:
       '201':
         description: Created
       '426':
         description: Insufficient Privileges
         allOf:
           - $ref: '#/components/responses/GeneralErrorResponse'
    get:
     tags:
       - JobApplications
     description: Get All Job Applications
     responses:
       '200':
         description: Ok
         allOf:
           - $ref: '#/components/responses/JobApplications'
       '404':
         description: Not found
         allOf:
           - $ref: '#/components/responses/JobApplications'
  '/job-applications/{jobApplicationId}':
   parameters:
     - $ref: '#/components/parameters/JobApplicationIdPath'
   get:
     tags:
       - JobApplications
     description: Get Job Applications with id
     responses:
       '200':
         description: OK
         allOf:
           - $ref: '#/components/responses/JobApplication'
       '404':
         description: Not Found
         allOf:
           - $ref: '#/components/responses/GeneralErrorResponse'
   put:
     tags:
       - JobApplications
     description: Update Job Applications with id
     requestBody:
       content:
         application/json:
           schema:
             $ref: '#/components/schemas/JobApplication'
     responses:
       '200':
         description: OK
         allOf:
           - $ref: '#/components/schemas/JobApplication'
       '404':
         description: Not Found
         allOf:
           - $ref: '#/components/responses/GeneralErrorResponse'
   delete:
     tags:
       - JobApplications
     description: Delete Job Applications with id
     responses:
       '200':
         description: OK
       '404':
         description: Not Found
         allOf:
           - $ref: '#/components/responses/GeneralErrorResponse'
  '/industry-tags':
    post:
      tags:
        - IndustryTags
      description: Create new Industry Tag
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IndustryTag'
      responses:
        '201':
          description: Created
        '400':
          description: Bad Request
          allOf:
            - $ref: '#/components/responses/GeneralErrorResponse'
    get:
      tags:
        - IndustryTags
      description: Get All Industry Tags
      parameters:
        - name: search
          in: query
          description: filter response
          required: false
          schema:
            $ref: '#/components/schemas/IndustryTag/properties/tag'
        - name: fuzzy
          in: query
          description: enable fuzzy search
          required: false
          schema:
            type: boolean
      responses:
        '200':
          description: Ok
          allOf:
            - $ref: '#/components/responses/IndustryTags'
  '/industry-tags/{industryTagId}':
    parameters:
      - $ref: '#/components/parameters/IndustryTagIdPath'
    get:
      tags:
        - IndustryTags
      description: Get IndustryTag with id
      responses:
        '200':
          description: OK
          allOf:
            - $ref: '#/components/responses/IndustryTag'
        '400':
          description: Bad Request
          allOf:
            - $ref: '#/components/responses/GeneralErrorResponse'
        '404':
          description: Not Found
          allOf:
            - $ref: '#/components/responses/GeneralErrorResponse'
    delete:
      tags:
        - IndustryTags
      description: Delete IndustryTag with id
      responses:
        '200':
          description: OK
        '400':
          description: Bad Request
          allOf:
            - $ref: '#/components/responses/GeneralErrorResponse'
        '404':
          description: Not Found
          allOf:
            - $ref: '#/components/responses/GeneralErrorResponse'
  '/connect':
    post:
      tags:
        - ConnectSE
      description: Create new SE Connection
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ConnectSE'
      responses:
        '201':
          description: Created
        '400':
          description: Bad Request
          allOf:
            - $ref: '#/components/responses/GeneralErrorResponse'
        '409':
          description: Conflict
          allOf:
            - $ref: '#/components/responses/GeneralErrorResponse'
    get:
      tags:
        - ConnectSE
      description: Get All SE Connections
      parameters:
        - name: status
          in: query
          description: filter response by connect_status
          required: false
          schema:
            $ref: '#/components/schemas/ConnectSE/properties/connect_status'
        - name: requestor
          in: query
          description: filter response by requestor
          required: false
          schema:
            $ref: '#/components/schemas/ConnectSE/properties/requestor'
        - name: requestee
          in: query
          description: filter response by requestee
          required: false
          schema:
            $ref: '#/components/schemas/ConnectSE/properties/requestee'
      responses:
        '200':
          description: Ok
          allOf:
            - $ref: '#/components/responses/ConnectSEs'
  '/connect/{connectId}':
    parameters:
      - $ref: '#/components/parameters/ConnectSEIdPath'
    get:
      tags:
        - ConnectSE
      description: Get SE Connection with id
      responses:
        '200':
          description: OK
          allOf:
            - $ref: '#/components/responses/ConnectSE'
        '400':
          description: Bad Request
          allOf:
            - $ref: '#/components/responses/GeneralErrorResponse'
        '404':
          description: Not Found
          allOf:
            - $ref: '#/components/responses/GeneralErrorResponse'
    put:
      tags:
        - ConnectSE
      description: Edit SE Connection with id
      responses:
        '200':
          description: OK
          allOf:
            - $ref: '#/components/responses/ConnectSE'
        '400':
          description: Bad Request
          allOf:
            - $ref: '#/components/responses/GeneralErrorResponse'
        '404':
          description: Not Found
          allOf:
            - $ref: '#/components/responses/GeneralErrorResponse'
    delete:
      tags:
        - ConnectSE
      description: Delete SE Connection with id
      responses:
        '200':
          description: OK
        '400':
          description: Bad Request
          allOf:
            - $ref: '#/components/responses/GeneralErrorResponse'
        '404':
          description: Not Found
          allOf:
            - $ref: '#/components/responses/GeneralErrorResponse'
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  schemas:
    GeneralSchema:
      type: object
      required:
        - message
      properties:
        message:
          type: string
    GeneralErrorSchema:
      type: object
      required:
        - errorMessage
      properties:
        errorMessage:
          type: string
    UserReference:
      type: string
      maxLength: 100
    Payment:
      type: object
      required:
        - payment_method_id
      properties:
        payment_method_id:
          type: string
    Chat:
      type: object
      required:
        - chat_type
        - chat_status
        - senior_executive
      properties:
        chat_id:
          type: number
        date:
          type: number
        chat_type:
          type: string
          enum:
            - ONE_ON_ONE
            - ONE_ON_FOUR
            - MOCK_INTERVIEW
        description:
          type: string
          maxLength: 255
        tags:
          type: array
          items:
            type: string
            maxLength: 100
        chat_status:
          type: string
          enum:
            - PENDING
            - ACTIVE
            - RESERVED
            - DONE
            - CANCELED
        aspiring_professionals:
          type: array
          items:
            $ref: '#/components/schemas/UserReference'
        senior_executive:
          $ref: '#/components/schemas/UserReference'
        fixed_date:
          type: number
        expiry_date:
          type: number
        created_on:
          type: number
        updated_on:
          type: number
    Chats:
      type: object
      required:
        - chats
        - count
      properties:
        chats:
          type: array
          items:
            $ref: '#/components/schemas/Chat'
        count:
          type: integer
    Job:
      type: object
      required:
        - title
        - description
        - requirements
        - company
        - country
        - region
        - city
        - job_type
        - job_tags
        - salary
        - deadline
        - posted_by
        - poster_family_name
        - poster_given_name
      properties:
        job_id:
          type: number
        title:
          type: string
          maxLength: 255
        company:
          type: string
          maxLength: 255
        country:
          type: string
          maxLength: 255
        region:
          type: string
          maxLength: 255
        city:
          type: string
          maxLength: 255
        description:
          type: string
        requirements:
          type: string
        posted_by:
          type: string
          format: email
        poster_family_name:
          type: string
          maxLength: 100
        poster_given_name:
          type: string
          maxLength: 100
        people_contacted:
          type: number
        job_type:
          type: string
          enum:
            - BOARD_POSITION
            - REGULAR_JOB
        job_status:
          type: string
          enum:
            - OPEN
            - CLOSED
        job_tags:
          type: array
          items:
            type: string
            enum:
              - SOFTWARE
              - FINANCE
              - LAW
        salary:
          type: number
        deadline:
          type: number
        created_on:
          type: number
        updated_on:
          type: number
    JobContact:
      type: object
      required:
        - posted_by
        - poster_family_name
        - poster_given_name
      properties:
        posted_by:
          type: string
          format: email
        poster_family_name:
          type: string
          maxLength: 100
        poster_given_name:
          type: string
          maxLength: 100
    Jobs:
      type: object
      required:
        - jobs
        - count
      properties:
        jobs:
          type: array
          items:
            $ref: '#/components/schemas/Job'
        count:
          type: integer
    JobApplication:
      type: object
      required:
        - job_id
        - applicant_id
        - job_application_status
        - documents
      properties:
        job_application_id:
          type: number
        job_id:
          type: number
        applicant_id:
          $ref: '#/components/schemas/UserReference'
        job_application_status:
          type: string
          enum:
            - SUBMIT
            - REVIEW
            - OFFER_EXTEND
            - OFFER_ACCEPT
            - OFFER_REJECT
        documents:
          type: string
          maxLength: 255
        created_on:
          type: number
        updated_on:
          type: number
    JobApplications:
      type: object
      required:
        - job_applications
        - count
      properties:
        job_applications:
          type: array
          items:
            $ref: '#/components/schemas/JobApplication'
        count:
          type: integer
    IndustryTag:
      type: object
      required:
        - tag
      properties:
        tag:
          type: string
          maxLength: 100
        created_on:
          type: number
        updated_on:
          type: number
    IndustryTags:
      type: object
      required:
        - industry_tags
        - count
      properties:
        industry_tags:
          type: array
          items:
            $ref: '#/components/schemas/IndustryTag'
        count:
          type: integer
    ConnectSE:
      type: object
      required:
        - requestor
        - requestee
      properties:
        connect_id:
          type: number
        requestor:
          type: string
          format: email
        requestee:
          type: string
          format: email
        connect_status:
          type: string
          enum:
            - PENDING
            - ACCEPTED
            - CANCELLED
            - DECLINED
        created_on:
          type: number
        updated_on:
          type: number
    ConnectSEs:
      type: object
      required:
        - connect_ses
        - count
      properties:
        connect_ses:
          type: array
          items:
            $ref: '#/components/schemas/ConnectSE'
        count:
          type: integer
  responses:
    GeneralResponse:
      description: General Response
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/GeneralSchema'
    GeneralErrorResponse:
      description: General Error Response
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/GeneralErrorSchema'
    Chat:
      description: Chat Response
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Chat'
    Chats:
      description: Chats Response
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Chats'
    Job:
      description: Job Response
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Job'
    JobContact:
      description: Job Response
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/JobContact'
    Jobs:
      description: Jobs Response
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Jobs'
    JobApplication:
      description: Job Application Response
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/JobApplication'
    JobApplications:
      description: Job Applications Response
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/JobApplications'
    IndustryTag:
      description: Industry Tag Response
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/IndustryTag'
    IndustryTags:
      description: Industry Tags Response
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/IndustryTags'
    ConnectSE:
      description: Connect SE Response
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ConnectSE'
    ConnectSEs:
      description: Connect SEs Response
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ConnectSEs'
  parameters:
    UserId:
      name: userId
      in: query
      description: id of user
      required: true
      schema:
        $ref: '#/components/schemas/UserReference'
    JobIdPath:
      name: jobId
      in: path
      description: id of job
      required: true
      schema:
        $ref: '#/components/schemas/Job/properties/job_id'
    JobIdQuery:
      name: jobId
      in: query
      description: id of job
      required: true
      schema:
        $ref: '#/components/schemas/Job/properties/job_id'
    JobApplicationIdPath:
      name: jobApplicationId
      in: path
      description: id of job applicationId
      required: true
      schema:
        $ref: '#/components/schemas/JobApplication/properties/job_application_id'
    JobApplicationIdQuery:
      name: jobApplicationId
      in: query
      description: id of job applicationId
      required: true
      schema:
        $ref: '#/components/schemas/JobApplication/properties/job_application_id'
    ChatIdPath:
      name: chatId
      in: path
      description: id of chat
      required: true
      schema:
        $ref: '#/components/schemas/Chat/properties/chat_id'
    ChatIdQuery:
      name: ChatId
      in: query
      description: id of chat
      required: true
      schema:
        $ref: '#/components/schemas/Chat/properties/chat_id'
    IndustryTagIdPath:
      name: industryTagId
      in: path
      description: id of industry_tag
      required: true
      schema:
        $ref: '#/components/schemas/IndustryTag/properties/tag'
    IndustryTagIdQuery:
      name: industryTagId
      in: query
      description: id of industry_tag
      required: true
      schema:
        $ref: '#/components/schemas/IndustryTag/properties/tag'
    ConnectSEIdPath:
      name: connectId
      in: path
      description: id of Connect_SE
      required: true
      schema:
        $ref: '#/components/schemas/ConnectSE/properties/connect_id'
    ConnectSEIdQuery:
      name: connectId
      in: query
      description: id of Connect_SE
      required: true
      schema:
        $ref: '#/components/schemas/ConnectSE/properties/connect_id'
